{"ast":null,"code":"import _slicedToArray from\"C:/Users/ARO LAMBO/giveaeay_portal/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';var useCountdown=function useCountdown(targetDate){var countDownDate=new Date(targetDate).getTime();var _useState=useState(countDownDate-new Date().getTime()),_useState2=_slicedToArray(_useState,2),countDown=_useState2[0],setCountDown=_useState2[1];useEffect(function(){var interval=setInterval(function(){setCountDown(countDownDate-new Date().getTime());},1000);return function(){return clearInterval(interval);};},[countDownDate]);return getReturnValues(countDown);};var getReturnValues=function getReturnValues(countDown){// calculate time left\nvar days=Math.floor(countDown/(1000*60*60*24));var hours=Math.floor(countDown%(1000*60*60*24)/(1000*60*60));var minutes=Math.floor(countDown%(1000*60*60)/(1000*60));var seconds=Math.floor(countDown%(1000*60)/1000);return[days,hours,minutes,seconds];};export{useCountdown};","map":{"version":3,"names":["useEffect","useState","useCountdown","targetDate","countDownDate","Date","getTime","countDown","setCountDown","interval","setInterval","clearInterval","getReturnValues","days","Math","floor","hours","minutes","seconds"],"sources":["C:/Users/ARO LAMBO/giveaeay_portal/frontend/src/components/UseCountdown.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst useCountdown = (targetDate) => {\r\n  const countDownDate = new Date(targetDate).getTime();\r\n\r\n  const [countDown, setCountDown] = useState(\r\n    countDownDate - new Date().getTime()\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCountDown(countDownDate - new Date().getTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [countDownDate]);\r\n\r\n  return getReturnValues(countDown);\r\n};\r\n\r\nconst getReturnValues = (countDown) => {\r\n  // calculate time left\r\n  const days = Math.floor(countDown / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (countDown % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((countDown % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((countDown % (1000 * 60)) / 1000);\r\n\r\n  return [days, hours, minutes, seconds];\r\n};\r\n\r\nexport { useCountdown }"],"mappings":"iIAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,UAAU,CAAK,CACnC,GAAMC,cAAa,CAAG,GAAIC,KAAI,CAACF,UAAU,CAAC,CAACG,OAAO,EAAE,CAEpD,cAAkCL,QAAQ,CACxCG,aAAa,CAAG,GAAIC,KAAI,EAAE,CAACC,OAAO,EAAE,CACrC,wCAFMC,SAAS,eAAEC,YAAY,eAI9BR,SAAS,CAAC,UAAM,CACd,GAAMS,SAAQ,CAAGC,WAAW,CAAC,UAAM,CACjCF,YAAY,CAACJ,aAAa,CAAG,GAAIC,KAAI,EAAE,CAACC,OAAO,EAAE,CAAC,CACpD,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,kBAAMK,cAAa,CAACF,QAAQ,CAAC,GACtC,CAAC,CAAE,CAACL,aAAa,CAAC,CAAC,CAEnB,MAAOQ,gBAAe,CAACL,SAAS,CAAC,CACnC,CAAC,CAED,GAAMK,gBAAe,CAAG,QAAlBA,gBAAe,CAAIL,SAAS,CAAK,CACrC;AACA,GAAMM,KAAI,CAAGC,IAAI,CAACC,KAAK,CAACR,SAAS,EAAI,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAC1D,GAAMS,MAAK,CAAGF,IAAI,CAACC,KAAK,CACrBR,SAAS,EAAI,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,EAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAC,CACvD,CACD,GAAMU,QAAO,CAAGH,IAAI,CAACC,KAAK,CAAER,SAAS,EAAI,IAAI,CAAG,EAAE,CAAG,EAAE,CAAC,EAAK,IAAI,CAAG,EAAE,CAAC,CAAC,CACxE,GAAMW,QAAO,CAAGJ,IAAI,CAACC,KAAK,CAAER,SAAS,EAAI,IAAI,CAAG,EAAE,CAAC,CAAI,IAAI,CAAC,CAE5D,MAAO,CAACM,IAAI,CAAEG,KAAK,CAAEC,OAAO,CAAEC,OAAO,CAAC,CACxC,CAAC,CAED,OAAShB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}